//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApplication2.localhost1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="plantServiceFullSoap", Namespace="http://tempuri.org/")]
    public partial class plantServiceFull : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPlantOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlantOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePlantOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAsCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAsDOCOperationCompleted;
        
        private System.Threading.SendOrPostCallback TypesSortOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpeciesSortOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlantsByLocationStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarnivorousStatisticsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public plantServiceFull() {
            this.Url = global::WebApplication2.Properties.Settings.Default.WebApplication2_localhost1_plantServiceFull;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetPlantsCompletedEventHandler GetPlantsCompleted;
        
        /// <remarks/>
        public event AddPlantCompletedEventHandler AddPlantCompleted;
        
        /// <remarks/>
        public event DeletePlantCompletedEventHandler DeletePlantCompleted;
        
        /// <remarks/>
        public event UpdatePlantCompletedEventHandler UpdatePlantCompleted;
        
        /// <remarks/>
        public event SaveAsCSVCompletedEventHandler SaveAsCSVCompleted;
        
        /// <remarks/>
        public event SaveAsXMLCompletedEventHandler SaveAsXMLCompleted;
        
        /// <remarks/>
        public event SaveAsJSONCompletedEventHandler SaveAsJSONCompleted;
        
        /// <remarks/>
        public event SaveAsDOCCompletedEventHandler SaveAsDOCCompleted;
        
        /// <remarks/>
        public event TypesSortCompletedEventHandler TypesSortCompleted;
        
        /// <remarks/>
        public event SpeciesSortCompletedEventHandler SpeciesSortCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event FilterCompletedEventHandler FilterCompleted;
        
        /// <remarks/>
        public event ShowStatisticsCompletedEventHandler ShowStatisticsCompleted;
        
        /// <remarks/>
        public event GetPlantsByLocationStatisticsCompletedEventHandler GetPlantsByLocationStatisticsCompleted;
        
        /// <remarks/>
        public event GetCarnivorousStatisticsCompletedEventHandler GetCarnivorousStatisticsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plant[] GetPlants() {
            object[] results = this.Invoke("GetPlants", new object[0]);
            return ((Plant[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlantsAsync() {
            this.GetPlantsAsync(null);
        }
        
        /// <remarks/>
        public void GetPlantsAsync(object userState) {
            if ((this.GetPlantsOperationCompleted == null)) {
                this.GetPlantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlantsOperationCompleted);
            }
            this.InvokeAsync("GetPlants", new object[0], this.GetPlantsOperationCompleted, userState);
        }
        
        private void OnGetPlantsOperationCompleted(object arg) {
            if ((this.GetPlantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlantsCompleted(this, new GetPlantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPlant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddPlant(Plant plant) {
            this.Invoke("AddPlant", new object[] {
                        plant});
        }
        
        /// <remarks/>
        public void AddPlantAsync(Plant plant) {
            this.AddPlantAsync(plant, null);
        }
        
        /// <remarks/>
        public void AddPlantAsync(Plant plant, object userState) {
            if ((this.AddPlantOperationCompleted == null)) {
                this.AddPlantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPlantOperationCompleted);
            }
            this.InvokeAsync("AddPlant", new object[] {
                        plant}, this.AddPlantOperationCompleted, userState);
        }
        
        private void OnAddPlantOperationCompleted(object arg) {
            if ((this.AddPlantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPlantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePlant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlant(int id) {
            this.Invoke("DeletePlant", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeletePlantAsync(int id) {
            this.DeletePlantAsync(id, null);
        }
        
        /// <remarks/>
        public void DeletePlantAsync(int id, object userState) {
            if ((this.DeletePlantOperationCompleted == null)) {
                this.DeletePlantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlantOperationCompleted);
            }
            this.InvokeAsync("DeletePlant", new object[] {
                        id}, this.DeletePlantOperationCompleted, userState);
        }
        
        private void OnDeletePlantOperationCompleted(object arg) {
            if ((this.DeletePlantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePlant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePlant(int id, Plant plant) {
            this.Invoke("UpdatePlant", new object[] {
                        id,
                        plant});
        }
        
        /// <remarks/>
        public void UpdatePlantAsync(int id, Plant plant) {
            this.UpdatePlantAsync(id, plant, null);
        }
        
        /// <remarks/>
        public void UpdatePlantAsync(int id, Plant plant, object userState) {
            if ((this.UpdatePlantOperationCompleted == null)) {
                this.UpdatePlantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePlantOperationCompleted);
            }
            this.InvokeAsync("UpdatePlant", new object[] {
                        id,
                        plant}, this.UpdatePlantOperationCompleted, userState);
        }
        
        private void OnUpdatePlantOperationCompleted(object arg) {
            if ((this.UpdatePlantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePlantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAsCSV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAsCSV() {
            this.Invoke("SaveAsCSV", new object[0]);
        }
        
        /// <remarks/>
        public void SaveAsCSVAsync() {
            this.SaveAsCSVAsync(null);
        }
        
        /// <remarks/>
        public void SaveAsCSVAsync(object userState) {
            if ((this.SaveAsCSVOperationCompleted == null)) {
                this.SaveAsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAsCSVOperationCompleted);
            }
            this.InvokeAsync("SaveAsCSV", new object[0], this.SaveAsCSVOperationCompleted, userState);
        }
        
        private void OnSaveAsCSVOperationCompleted(object arg) {
            if ((this.SaveAsCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAsCSVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAsXML() {
            this.Invoke("SaveAsXML", new object[0]);
        }
        
        /// <remarks/>
        public void SaveAsXMLAsync() {
            this.SaveAsXMLAsync(null);
        }
        
        /// <remarks/>
        public void SaveAsXMLAsync(object userState) {
            if ((this.SaveAsXMLOperationCompleted == null)) {
                this.SaveAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAsXMLOperationCompleted);
            }
            this.InvokeAsync("SaveAsXML", new object[0], this.SaveAsXMLOperationCompleted, userState);
        }
        
        private void OnSaveAsXMLOperationCompleted(object arg) {
            if ((this.SaveAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAsXMLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAsJSON() {
            this.Invoke("SaveAsJSON", new object[0]);
        }
        
        /// <remarks/>
        public void SaveAsJSONAsync() {
            this.SaveAsJSONAsync(null);
        }
        
        /// <remarks/>
        public void SaveAsJSONAsync(object userState) {
            if ((this.SaveAsJSONOperationCompleted == null)) {
                this.SaveAsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAsJSONOperationCompleted);
            }
            this.InvokeAsync("SaveAsJSON", new object[0], this.SaveAsJSONOperationCompleted, userState);
        }
        
        private void OnSaveAsJSONOperationCompleted(object arg) {
            if ((this.SaveAsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAsJSONCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAsDOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAsDOC() {
            this.Invoke("SaveAsDOC", new object[0]);
        }
        
        /// <remarks/>
        public void SaveAsDOCAsync() {
            this.SaveAsDOCAsync(null);
        }
        
        /// <remarks/>
        public void SaveAsDOCAsync(object userState) {
            if ((this.SaveAsDOCOperationCompleted == null)) {
                this.SaveAsDOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAsDOCOperationCompleted);
            }
            this.InvokeAsync("SaveAsDOC", new object[0], this.SaveAsDOCOperationCompleted, userState);
        }
        
        private void OnSaveAsDOCOperationCompleted(object arg) {
            if ((this.SaveAsDOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAsDOCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TypesSort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plant[] TypesSort() {
            object[] results = this.Invoke("TypesSort", new object[0]);
            return ((Plant[])(results[0]));
        }
        
        /// <remarks/>
        public void TypesSortAsync() {
            this.TypesSortAsync(null);
        }
        
        /// <remarks/>
        public void TypesSortAsync(object userState) {
            if ((this.TypesSortOperationCompleted == null)) {
                this.TypesSortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTypesSortOperationCompleted);
            }
            this.InvokeAsync("TypesSort", new object[0], this.TypesSortOperationCompleted, userState);
        }
        
        private void OnTypesSortOperationCompleted(object arg) {
            if ((this.TypesSortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TypesSortCompleted(this, new TypesSortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpeciesSort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plant[] SpeciesSort() {
            object[] results = this.Invoke("SpeciesSort", new object[0]);
            return ((Plant[])(results[0]));
        }
        
        /// <remarks/>
        public void SpeciesSortAsync() {
            this.SpeciesSortAsync(null);
        }
        
        /// <remarks/>
        public void SpeciesSortAsync(object userState) {
            if ((this.SpeciesSortOperationCompleted == null)) {
                this.SpeciesSortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpeciesSortOperationCompleted);
            }
            this.InvokeAsync("SpeciesSort", new object[0], this.SpeciesSortOperationCompleted, userState);
        }
        
        private void OnSpeciesSortOperationCompleted(object arg) {
            if ((this.SpeciesSortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpeciesSortCompleted(this, new SpeciesSortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plant[] Search(string searchTerm) {
            object[] results = this.Invoke("Search", new object[] {
                        searchTerm});
            return ((Plant[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string searchTerm) {
            this.SearchAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string searchTerm, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        searchTerm}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Filter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plant[] Filter(string selectedFilter, string filterValue) {
            object[] results = this.Invoke("Filter", new object[] {
                        selectedFilter,
                        filterValue});
            return ((Plant[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterAsync(string selectedFilter, string filterValue) {
            this.FilterAsync(selectedFilter, filterValue, null);
        }
        
        /// <remarks/>
        public void FilterAsync(string selectedFilter, string filterValue, object userState) {
            if ((this.FilterOperationCompleted == null)) {
                this.FilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterOperationCompleted);
            }
            this.InvokeAsync("Filter", new object[] {
                        selectedFilter,
                        filterValue}, this.FilterOperationCompleted, userState);
        }
        
        private void OnFilterOperationCompleted(object arg) {
            if ((this.FilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCompleted(this, new FilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShowStatistics(object sender, EventArgs e) {
            this.Invoke("ShowStatistics", new object[] {
                        sender,
                        e});
        }
        
        /// <remarks/>
        public void ShowStatisticsAsync(object sender, EventArgs e) {
            this.ShowStatisticsAsync(sender, e, null);
        }
        
        /// <remarks/>
        public void ShowStatisticsAsync(object sender, EventArgs e, object userState) {
            if ((this.ShowStatisticsOperationCompleted == null)) {
                this.ShowStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowStatisticsOperationCompleted);
            }
            this.InvokeAsync("ShowStatistics", new object[] {
                        sender,
                        e}, this.ShowStatisticsOperationCompleted, userState);
        }
        
        private void OnShowStatisticsOperationCompleted(object arg) {
            if ((this.ShowStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlantsByLocationStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlantsByLocationStatistics() {
            object[] results = this.Invoke("GetPlantsByLocationStatistics", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlantsByLocationStatisticsAsync() {
            this.GetPlantsByLocationStatisticsAsync(null);
        }
        
        /// <remarks/>
        public void GetPlantsByLocationStatisticsAsync(object userState) {
            if ((this.GetPlantsByLocationStatisticsOperationCompleted == null)) {
                this.GetPlantsByLocationStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlantsByLocationStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetPlantsByLocationStatistics", new object[0], this.GetPlantsByLocationStatisticsOperationCompleted, userState);
        }
        
        private void OnGetPlantsByLocationStatisticsOperationCompleted(object arg) {
            if ((this.GetPlantsByLocationStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlantsByLocationStatisticsCompleted(this, new GetPlantsByLocationStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarnivorousStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCarnivorousStatistics() {
            object[] results = this.Invoke("GetCarnivorousStatistics", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarnivorousStatisticsAsync() {
            this.GetCarnivorousStatisticsAsync(null);
        }
        
        /// <remarks/>
        public void GetCarnivorousStatisticsAsync(object userState) {
            if ((this.GetCarnivorousStatisticsOperationCompleted == null)) {
                this.GetCarnivorousStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarnivorousStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetCarnivorousStatistics", new object[0], this.GetCarnivorousStatisticsOperationCompleted, userState);
        }
        
        private void OnGetCarnivorousStatisticsOperationCompleted(object arg) {
            if ((this.GetCarnivorousStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarnivorousStatisticsCompleted(this, new GetCarnivorousStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Plant {
        
        private string idField;
        
        private string plantNameField;
        
        private string speciesField;
        
        private string plantTypeField;
        
        private string carnivorousField;
        
        private string locationField;
        
        private string imageField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PlantName {
            get {
                return this.plantNameField;
            }
            set {
                this.plantNameField = value;
            }
        }
        
        /// <remarks/>
        public string Species {
            get {
                return this.speciesField;
            }
            set {
                this.speciesField = value;
            }
        }
        
        /// <remarks/>
        public string PlantType {
            get {
                return this.plantTypeField;
            }
            set {
                this.plantTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Carnivorous {
            get {
                return this.carnivorousField;
            }
            set {
                this.carnivorousField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EventArgs {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPlantsCompletedEventHandler(object sender, GetPlantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddPlantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeletePlantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePlantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SaveAsCSVCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SaveAsXMLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SaveAsJSONCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SaveAsDOCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TypesSortCompletedEventHandler(object sender, TypesSortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TypesSortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TypesSortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SpeciesSortCompletedEventHandler(object sender, SpeciesSortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpeciesSortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpeciesSortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FilterCompletedEventHandler(object sender, FilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ShowStatisticsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPlantsByLocationStatisticsCompletedEventHandler(object sender, GetPlantsByLocationStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlantsByLocationStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlantsByLocationStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCarnivorousStatisticsCompletedEventHandler(object sender, GetCarnivorousStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarnivorousStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarnivorousStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591